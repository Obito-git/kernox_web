---
import Container from "@components/Container.astro";
import PageLayout from "@layouts/PageLayout.astro";
import ArrowCard from "@components/os/ArrowCard.astro";
import { PAGE_METADATA } from "@const/global";
import { OsPostCategory, OS_CATEGORY_CARD_ENTRIES } from "@const/os";
import { CATEGORY_CARD_ENTRIES, ProblemCategory } from "@const/leetcode";
import Link from "@components/Link.astro";
---

<PageLayout
    title={PAGE_METADATA.home.title}
    description={PAGE_METADATA.home.description}
>
    <Container>
        <h4 class="animate font-semibold text-black dark:text-white">
            Welcome to the Rust corner <span class="text-xl">üëãüèª</span>
        </h4>
        <div class="space-y-16">
            <section class="animate">
                <article class="space-y-4">
                    <p>
                        This series is intended to focus on building a Rust
                        kernel from scratch for 32-bit systems in its early
                        stages. 64-bit support will come later, probably along
                        with implementations for ARM or RISC-V.
                    </p>
                    <p>
                        However, I don't have enough time right now to make it
                        as polished as I envision it. I will mainly publish my
                        LeetCode solutions here until my summer vacation in
                        2025.
                    </p>
                    <p>
                        I plan to keep some kernel pages as a reminder to work
                        on it every time I visit this site. Have fun!
                    </p>
                </article>
            </section>

            <section class="animate space-y-6">
                <h5 class="font-semibold text-black dark:text-white">
                    Kernel from scratch
                </h5>
                <ul class="flex flex-col gap-4">
                    {
                        Object.values(OsPostCategory).map(
                            (category: OsPostCategory) => (
                                <li>
                                    <ArrowCard
                                        entry={
                                            OS_CATEGORY_CARD_ENTRIES[category]
                                        }
                                    />
                                </li>
                            ),
                        )
                    }
                </ul>
            </section>
            <section class="animate space-y-6">
                <div
                    class="flex flex-wrap gap-y-2 items-center justify-between"
                >
                    <h5 class="font-semibold text-black dark:text-white">
                        Leetcode
                    </h5>
                    <Link href={PAGE_METADATA.leetcode.url}>
                        See all problems
                    </Link>
                </div>
                <div
                    class="border-l-4 pl-4 text-sm font-semibold text-black dark:text-white border-red-500 dark:border-yellow-500"
                >
                    <p>
                        If you're interested in more than just the solutions,
                        you can also follow the order.
                    </p>
                    <p>I've arranged them by topic complexity.</p>
                </div>
                <ul class="flex flex-col gap-4">
                    {
                        Object.values(ProblemCategory).map(
                            (category: ProblemCategory) => (
                                <li>
                                    <ArrowCard
                                        entry={CATEGORY_CARD_ENTRIES[category]}
                                    />
                                </li>
                            ),
                        )
                    }
                </ul>
            </section>
        </div>
    </Container>
</PageLayout>
