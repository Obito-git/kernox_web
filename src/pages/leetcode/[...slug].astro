---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import BackToPrev from "@components/BackToPrev.astro";
import { ContentCollection, PAGE_METADATA } from "@const/global";
import ProblemHeader from "@components/leetcode/ProblemHeader.astro";
import TableOfContents from "@components/leetcode/TableOfContents.astro";

export async function getStaticPaths() {
  const problems = (await getCollection(ContentCollection.LEETCODE)).filter(
    (problem) => !problem.data.draft,
  );
  const headingsArr = await Promise.all(
    problems.map(async (problem) => {
      const data = await problem.render();
      return data.headings;
    }),
  );
  return problems.map((problem, index) => ({
    params: { slug: problem.slug },
    props: { ...problem, headings: headingsArr[index] },
  }));
}

type Props = CollectionEntry<ContentCollection.LEETCODE> & { headings: any };

const problem = Astro.props as Props;
const { Content } = await problem.render();
---

<PageLayout title={problem.data.title} description={problem.data.title}>
  <Container>
    <div class="animate">
      <BackToPrev href={PAGE_METADATA.leetcode.url}>
        Back to problems
      </BackToPrev>
    </div>
    <article class="animate">
      <ProblemHeader {...problem.data} />
      <TableOfContents headings={problem.headings} />
      <Content />
      <script
        is:inline
        src="https://giscus.app/client.js"
        data-repo="Obito-git/kernox_web"
        data-repo-id="R_kgDONwcq4A"
        data-category="Q&A"
        data-category-id="DIC_kwDONwcq4M4Cma-O"
        data-mapping="pathname"
        data-strict="0"
        data-reactions-enabled="1"
        data-emit-metadata="0"
        data-input-position="bottom"
        data-theme="transparent_dark"
        data-lang="en"
        crossorigin="anonymous"
        async></script>
    </article>
  </Container>
</PageLayout>
