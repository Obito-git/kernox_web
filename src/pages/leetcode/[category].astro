---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import ProblemArrowCard from "@components/leetcode/ProblemArrowCard.astro";
import { mapToProblemCardEntry } from "@content/config";
import { difficultyOrder } from "@const/leetcode";
import BackToPrev from "@components/BackToPrev.astro";
import { PAGE_METADATA } from "@const/global";

export async function getStaticPaths() {
    const allPosts = (await getCollection("leetcode")).filter(
        (post) => !post.data.draft,
    );
    const categories = new Set(allPosts.map((post) => post.data.category));
    return Array.from(categories).map((category) => ({
        params: { category },
    }));
}

const allPosts = (await getCollection("leetcode")).filter(
    (post) => !post.data.draft,
);

const { category } = Astro.params;
const selectedCategory = category as string;

const postsForCategory = allPosts.filter(
    (post) => post.data.category === selectedCategory,
);

//TODO: improve, I want to sleep right now :(
const sortedPosts = postsForCategory.sort((a, b) => {
    const aDiff = difficultyOrder[a.data.difficulty] ?? 99;
    const bDiff = difficultyOrder[b.data.difficulty] ?? 99;
    return aDiff - bDiff;
});
---

<PageLayout
    title={`Leetcode - ${selectedCategory}`}
    description={`Posts under ${selectedCategory}`}
>
    <Container>
        <div class="space-y-10">
            <h1
                class="animate font-semibold text-black dark:text-white text-3xl"
            >
                Leetcode - {selectedCategory}
            </h1>
            <div class="animate">
                <BackToPrev href={PAGE_METADATA.leetcode.url}>
                    Back to problems
                </BackToPrev>
            </div>
            <div class="animate space-y-4">
                <ul class="flex flex-col gap-4">
                    {
                        sortedPosts.map((post) => (
                            <li {...{ key: post.slug as string }}>
                                <ProblemArrowCard
                                    entry={mapToProblemCardEntry(post)}
                                />
                            </li>
                        ))
                    }
                </ul>
            </div>
        </div>
    </Container>
</PageLayout>
