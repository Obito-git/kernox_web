---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import CategoryList from "@components/CategoryList.astro";
import { BLOG } from "@consts";

const allPosts = (await getCollection("blog")).filter(
  (post) => !post.data.draft,
);

interface SubcategoryGroup {
  [subcategory: string]: CollectionEntry<"blog">[];
}

interface CategoryGroup {
  [category: string]: SubcategoryGroup;
}

const groupedPosts: CategoryGroup = allPosts.reduce(
  (acc: CategoryGroup, post) => {
    const { category, subcategory } = post.data;
    const safeSubcategory = subcategory || "Uncategorized";

    if (!acc[category]) {
      acc[category] = {};
    }

    if (!acc[category][safeSubcategory]) {
      acc[category][safeSubcategory] = [];
    }

    acc[category][safeSubcategory].push(post);
    return acc;
  },
  {},
);
---

<PageLayout title={BLOG.TITLE} description={BLOG.DESCRIPTION}>
  <Container>
    <div class="space-y-10">
      <h1 class="animate font-semibold text-black dark:text-white text-3xl">
        Blog
      </h1>
      <CategoryList groupedPosts={groupedPosts} />
    </div>
  </Container>
</PageLayout>
